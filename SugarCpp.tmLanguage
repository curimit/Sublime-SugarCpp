<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>comment</key>
  <string>SugarCpp Syntax: version 0.1</string>
  <key>fileTypes</key>
  <array>
    <string>sc</string>
  </array>
  <key>foldingStartMarker</key>
  <string>^\s*class\s+\S.*$|.*(-&gt;|=&gt;)\s*$|.*[\[{]\s*$</string>
  <key>foldingStopMarker</key>
  <string>^\s*$|^\s*[}\]]\s*$</string>
  <key>keyEquivalent</key>
  <string>^~C</string>
  <key>name</key>
  <string>SugarCpp</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>captures</key>
      <dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.function.sugar</string>
        </dict>
      </dict>
      <key>match</key>
      <string>
        (
        [=-]&gt;
        )
      </string>
      <key>name</key>
      <string>meta.inline.function.sugar</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.entity.sugar</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.entity.sugar</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(`)[a-zA-Z_']*?(`)</string>
      <key>name</key>
      <string>keyword.operator.function.infix.sugar</string>
    </dict>
    <dict>
      <key>begin</key>
      <string>/\*</string>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.comment.sugar</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\*/</string>
      <key>name</key>
      <string>comment.block.sugar</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.comment.sugar</string>
        </dict>
      </dict>
      <key>match</key>
      <string>//(?!\{).*$\n?</string>
      <key>name</key>
      <string>comment.line.number-sign.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?x)
        \b(?&lt;![\.\$])(
          if|else|for|in|try|catch|loop|while|switch|case|then|
          continue|break|return|throw|by|to|downto|when|til|
          from|where|let|new|delete|finally|defer|
          import|public|private|friend|inline|const|static|using|namespace|
          and|not|or|is|isnt|
        )(?!\s*:)\b
      </string>
      <key>name</key>
      <string>keyword.control.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>
        (?x)
        \+|-|\*|\/|%|
        &gt;=|&lt;=|&gt;|&lt;|==|\!=|&lt;-|
        &lt;&lt;|&gt;&gt;|
        &amp;|\^|\||
        =|\+=|-=|\*=|\/=|%=|&amp;=|\^=|\|=|&lt;&lt;=|&gt;&gt;=|
        .|::|-&gt;|.\*|
        \+\+|--|
        \!|\~|
        \b(?&lt;![\.\$])(new|delete|sizeof)\b
      </string>
      <key>name</key>
      <string>keyword.operator.sugar</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.sugar</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(?&gt;[a-zA-Z_\s])(=|:=|\+=|-=|\*=|/=|%=|&amp;=|^=|\|=|&lt;&lt;=|&gt;&gt;=)(?=[a-zA-Z_\s])</string>
      <key>name</key>
      <string>variable.assignment.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>[=-]&gt;|&lt;-</string>
      <key>name</key>
      <string>storage.type.function.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(?&lt;!\.)(true)(?!\s*[:=])\b</string>
      <key>name</key>
      <string>constant.language.boolean.true.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(?&lt;!\.)(false)(?!\s*[:=])\b</string>
      <key>name</key>
      <string>constant.language.boolean.false.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(?&lt;!\.)(NULL|nullptr|nil)(?!\s*[:=])\b</string>
      <key>name</key>
      <string>constant.language.null.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(?&lt;!\.)(this)(?!\s*[:=])\b</string>
      <key>name</key>
      <string>variable.language.sugar</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.class.sugar</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(class\b|enum\b|typedef\b)</string>
      <key>name</key>
      <string>meta.class.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?x)\b(
        void|int|double|float|bool|unsigned|short|char|long|
        uint|int8|int16|int32|int64|uint8|uint16|uint32|uint64
      )\b</string>
      <key>name</key>
      <string>support.class.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?x)\b(
        assert
      )\b</string>
      <key>name</key>
      <string>support.function.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\{|\}</string>
      <key>name</key>
      <string>meta.brace.curly.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\(|\)</string>
      <key>name</key>
      <string>meta.brace.round.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\[|\]\s*</string>
      <key>name</key>
      <string>meta.brace.square.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(@[a-zA-Z0-9_]*)</string>
      <key>name</key>
      <string>variable.parameter.function.sugar</string>
    </dict>
    <dict>
      <key>match</key>
      <string>^\s*([a-zA-Z0-9_]*)(?=(\s*:))</string>
      <key>name</key>
      <string>variable.parameter.function.sugar</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#instance_variable</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#single_quoted_string</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#double_quoted_string</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#numeric</string>
    </dict>
  </array>
  <key>repository</key>
  <dict>
    <key>single_quoted_string</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>'</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.sugar</string>
            </dict>
          </dict>
          <key>end</key>
          <string>'</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.sugar</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.single.sugar</string>
        </dict>
      </array>
    </dict>    
    <key>double_quoted_string</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>"</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.sugar</string>
            </dict>
          </dict>
          <key>end</key>
          <string>"</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.sugar</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.double.sugar</string>
        </dict>
      </array>
    </dict>
    <key>numeric</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?&lt;!\$)\b((0([box])[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?(e[+\-]?[0-9]+)?))\b</string>
          <key>name</key>
          <string>constant.numeric.sugar</string>
        </dict>
      </array>
    </dict>
  </dict>
  <key>scopeName</key>
  <string>source.sugar</string>
</dict>
</plist>
